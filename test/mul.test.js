let path = require('path');
let chai_promised = require('chai-as-promised');
let chai = require("chai");
chai.use(chai_promised);
let should = chai.should();
let expect = chai.expect
let assert = require('chai').assert, foo = [];
const { PerformanceObserver, performance } = require('perf_hooks');

let sci_calci = require('../calci')

let start_time = null
beforeEach(function () {
    start_time = performance.now()
});

describe('multiply', function () {
    it('both positive numbers #1', function () {
        sci_calci.mul('12', '12').should.be.equal('144')
    })
    it('both positive numbers #2', function () {
        sci_calci.mul('000', '00001').should.be.equal('0')
    })
    it('both positive numbers #3', function () {
        sci_calci.mul('000', '0000').should.be.equal('0')
    })
    it('both positive numbers #4', function () {
        sci_calci.mul('100', '100').should.be.equal('10000')
    })
    it('both positive numbers #5', function () {
        sci_calci.mul('872348723947324723947238947293847234732283478234783247893', '23489734892374932749237489503485094395555435439584390580').should.be.equal('20491240259224221643521112922570942619904006623634285311094602048367563738184734951914168924668336638437474047940')
    })
    it('both positive numbers #6', function () {
        sci_calci.mul('872348723947324723947238947293847234732283478234783247893', '3489734892374932749237489503485094395555435439584390580').should.be.equal('3044265780277727164576333976693997925258337058938620353234602048367563738184734951914168924668336638437474047940')
    })
    it('both positive numbers #7', function () {
        sci_calci.mul('23489734892374932749237489503485094395555435439584390580', '872348723947324723947238947293847234732283478234783247893').should.be.equal('20491240259224221643521112922570942619904006623634285311094602048367563738184734951914168924668336638437474047940')
    })
    it('both positive numbers #8', function () {
        sci_calci.mul('-23489734892374932749237489503485094395555435439584390580', '872348723947324723947238947293847234732283478234783247893').should.be.equal('-20491240259224221643521112922570942619904006623634285311094602048367563738184734951914168924668336638437474047940')
    })
    it('both positive numbers #8', function () {
        sci_calci.mul('-1223489734892374932749237489503485094395555435439584390580', '32872348723947324723947238947293847234732283478234783247893').should.be.equal('-40218981225552011738355807513786710644956418114572074681342694602048367563738184734951914168924668336638437474047940')
    })
    it('both positive numbers #8', function () {
        sci_calci.mul('-24213421342342134123412342134123423423333333333333312342421342342421342134234213412341234213412342342333333333333331234242134234', '242134213423421341234123421341234234233333333333333123424213423425435345345325325234534').should.be.equal('-5862897731017895563354347895515829861193226259556387249279481416948511964698067962133914423425726208677270449233028929459679293390385926573835444949407963387414322255794782327739020453173115175416370741420760436956')
    })
})

afterEach(function () {
    //console.log('timediff:' + (performance.now() - start_time))
    start_time = null
});